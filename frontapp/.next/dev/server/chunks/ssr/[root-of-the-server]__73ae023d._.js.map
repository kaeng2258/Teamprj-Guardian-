{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/hwangjeongseong/java/Teamprj-Guardian-/frontapp/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { FormEvent, useMemo, useState } from \"react\";\n\nconst API_BASE_URL =\n  process.env.NEXT_PUBLIC_API_URL ?? \"http://localhost:8090\";\n\ntype AuthMode = \"login\" | \"register\";\ntype UserRoleOption = \"CLIENT\" | \"PROVIDER\";\n\ntype ApiErrorPayload = {\n  message?: string;\n};\n\ntype LoginSuccessPayload = {\n  userId: number;\n  role: string;\n  accessToken: string;\n  refreshToken: string;\n  redirectPath: string;\n};\n\ntype RegisterSuccessPayload = {\n  id: number;\n  email: string;\n  name: string;\n  role: string;\n  status: string;\n};\n\nconst roleLabels: Record<UserRoleOption, string> = {\n  CLIENT: \"보호자\",\n  PROVIDER: \"서비스 제공자\",\n};\n\nasync function extractErrorMessage(response: Response) {\n  try {\n    const data: ApiErrorPayload = await response.json();\n    if (data?.message) {\n      return data.message;\n    }\n  } catch (error) {\n    // ignore JSON parse errors\n  }\n\n  if (response.status >= 500) {\n    return \"서버 오류가 발생했습니다. 잠시 후 다시 시도해주세요.\";\n  }\n  return \"요청을 처리할 수 없습니다. 입력 값을 다시 확인해주세요.\";\n}\n\nexport default function Home() {\n  const [activeTab, setActiveTab] = useState<AuthMode>(\"login\");\n  const [loginEmail, setLoginEmail] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [loginMessage, setLoginMessage] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n  const [loginLoading, setLoginLoading] = useState(false);\n\n  const [registerRole, setRegisterRole] = useState<UserRoleOption>(\"CLIENT\");\n  const [registerName, setRegisterName] = useState(\"\");\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [registerConfirmPassword, setRegisterConfirmPassword] = useState(\"\");\n  const [registerTermsAgreed, setRegisterTermsAgreed] = useState(false);\n  const [registerPrivacyAgreed, setRegisterPrivacyAgreed] = useState(false);\n  const [registerMessage, setRegisterMessage] = useState(\"\");\n  const [registerError, setRegisterError] = useState(\"\");\n  const [registerLoading, setRegisterLoading] = useState(false);\n\n  const tabClassName = useMemo(\n    () => ({\n      active: \"flex-1 rounded-md bg-black px-3 py-2 text-white\",\n      inactive:\n        \"flex-1 rounded-md border border-gray-300 px-3 py-2 text-gray-600 hover:border-black\",\n    }),\n    []\n  );\n\n  const handleLoginSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setLoginMessage(\"\");\n    setLoginError(\"\");\n    setLoginLoading(true);\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: loginEmail,\n          password: loginPassword,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorMessage = await extractErrorMessage(response);\n        setLoginError(errorMessage);\n        return;\n      }\n\n      const payload: LoginSuccessPayload = await response.json();\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(\"accessToken\", payload.accessToken);\n        window.localStorage.setItem(\"refreshToken\", payload.refreshToken);\n        window.localStorage.setItem(\"userRole\", payload.role);\n      }\n\n      const welcomeMessage = [\n        \"로그인에 성공했습니다.\",\n        payload.redirectPath\n          ? `이동 경로: ${payload.redirectPath}`\n          : undefined,\n      ]\n        .filter(Boolean)\n        .join(\"\\n\");\n\n      setLoginMessage(welcomeMessage);\n    } catch (error) {\n      setLoginError(\"서버에 연결할 수 없습니다. 네트워크 상태를 확인해주세요.\");\n    } finally {\n      setLoginLoading(false);\n    }\n  };\n\n  const handleRegisterSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setRegisterMessage(\"\");\n    setRegisterError(\"\");\n\n    if (registerPassword !== registerConfirmPassword) {\n      setRegisterError(\"비밀번호 확인이 일치하지 않습니다.\");\n      return;\n    }\n\n    if (!registerTermsAgreed || !registerPrivacyAgreed) {\n      setRegisterError(\"이용약관과 개인정보 처리방침에 모두 동의해야 합니다.\");\n      return;\n    }\n\n    setRegisterLoading(true);\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/users`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          role: registerRole,\n          email: registerEmail,\n          password: registerPassword,\n          name: registerName,\n          termsAgreed: registerTermsAgreed,\n          privacyAgreed: registerPrivacyAgreed,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorMessage = await extractErrorMessage(response);\n        setRegisterError(errorMessage);\n        return;\n      }\n\n      const payload: RegisterSuccessPayload = await response.json();\n      setRegisterMessage(`${payload.name}님, 가입이 완료되었습니다. 로그인 해주세요.`);\n      setLoginEmail(payload.email);\n      setActiveTab(\"login\");\n      setRegisterPassword(\"\");\n      setRegisterConfirmPassword(\"\");\n    } catch (error) {\n      setRegisterError(\"서버에 연결할 수 없습니다. 잠시 후 다시 시도해주세요.\");\n    } finally {\n      setRegisterLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-slate-50 px-4\">\n      <main className=\"w-full max-w-xl rounded-2xl bg-white p-8 shadow-lg\">\n        <h1 className=\"mb-6 text-2xl font-semibold text-gray-900\">\n          Guardian 서비스\n        </h1>\n        <div className=\"mb-6 flex gap-2\">\n          <button\n            className={\n              activeTab === \"login\" ? tabClassName.active : tabClassName.inactive\n            }\n            onClick={() => {\n              setActiveTab(\"login\");\n              setLoginError(\"\");\n              setRegisterMessage(\"\");\n            }}\n            type=\"button\"\n          >\n            로그인\n          </button>\n          <button\n            className={\n              activeTab === \"register\"\n                ? tabClassName.active\n                : tabClassName.inactive\n            }\n            onClick={() => {\n              setActiveTab(\"register\");\n              setRegisterError(\"\");\n              setLoginMessage(\"\");\n            }}\n            type=\"button\"\n          >\n            회원가입\n          </button>\n        </div>\n\n        {activeTab === \"login\" ? (\n          <form className=\"flex flex-col gap-4\" onSubmit={handleLoginSubmit}>\n            <label className=\"flex flex-col gap-1\">\n              <span className=\"text-sm text-gray-600\">이메일</span>\n              <input\n                aria-label=\"이메일\"\n                autoComplete=\"email\"\n                className=\"rounded-md border border-gray-300 px-3 py-2 focus:border-black focus:outline-none\"\n                onChange={(event) => setLoginEmail(event.target.value)}\n                placeholder=\"you@example.com\"\n                required\n                type=\"email\"\n                value={loginEmail}\n              />\n            </label>\n            <label className=\"flex flex-col gap-1\">\n              <span className=\"text-sm text-gray-600\">비밀번호</span>\n              <input\n                aria-label=\"비밀번호\"\n                autoComplete=\"current-password\"\n                className=\"rounded-md border border-gray-300 px-3 py-2 focus:border-black focus:outline-none\"\n                onChange={(event) => setLoginPassword(event.target.value)}\n                placeholder=\"비밀번호를 입력하세요\"\n                required\n                type=\"password\"\n                value={loginPassword}\n              />\n            </label>\n            <button\n              className=\"rounded-md bg-black px-4 py-2 text-white transition hover:bg-gray-800 disabled:opacity-50\"\n              disabled={loginLoading}\n              type=\"submit\"\n            >\n              {loginLoading ? \"로그인 중...\" : \"로그인\"}\n            </button>\n            {loginMessage && (\n              <pre className=\"whitespace-pre-wrap rounded-md bg-green-50 px-3 py-2 text-sm text-green-700\">\n                {loginMessage}\n              </pre>\n            )}\n            {loginError && (\n              <p className=\"rounded-md bg-red-50 px-3 py-2 text-sm text-red-600\">\n                {loginError}\n              </p>\n            )}\n          </form>\n        ) : (\n          <form\n            className=\"flex flex-col gap-4\"\n            onSubmit={handleRegisterSubmit}\n          >\n            <label className=\"flex flex-col gap-1\">\n              <span className=\"text-sm text-gray-600\">이름</span>\n              <input\n                aria-label=\"이름\"\n                autoComplete=\"name\"\n                className=\"rounded-md border border-gray-300 px-3 py-2 focus:border-black focus:outline-none\"\n                onChange={(event) => setRegisterName(event.target.value)}\n                placeholder=\"홍길동\"\n                required\n                type=\"text\"\n                value={registerName}\n              />\n            </label>\n            <label className=\"flex flex-col gap-1\">\n              <span className=\"text-sm text-gray-600\">이메일</span>\n              <input\n                aria-label=\"회원가입 이메일\"\n                autoComplete=\"email\"\n                className=\"rounded-md border border-gray-300 px-3 py-2 focus:border-black focus:outline-none\"\n                onChange={(event) => setRegisterEmail(event.target.value)}\n                placeholder=\"you@example.com\"\n                required\n                type=\"email\"\n                value={registerEmail}\n              />\n            </label>\n            <div className=\"grid gap-4 md:grid-cols-2\">\n              <label className=\"flex flex-col gap-1\">\n                <span className=\"text-sm text-gray-600\">비밀번호</span>\n                <input\n                  aria-label=\"회원가입 비밀번호\"\n                  autoComplete=\"new-password\"\n                  className=\"rounded-md border border-gray-300 px-3 py-2 focus:border-black focus:outline-none\"\n                  onChange={(event) => setRegisterPassword(event.target.value)}\n                  placeholder=\"영문, 숫자 포함 8자 이상\"\n                  required\n                  type=\"password\"\n                  value={registerPassword}\n                />\n              </label>\n              <label className=\"flex flex-col gap-1\">\n                <span className=\"text-sm text-gray-600\">비밀번호 확인</span>\n                <input\n                  aria-label=\"비밀번호 확인\"\n                  autoComplete=\"new-password\"\n                  className=\"rounded-md border border-gray-300 px-3 py-2 focus:border-black focus:outline-none\"\n                  onChange={(event) =>\n                    setRegisterConfirmPassword(event.target.value)\n                  }\n                  placeholder=\"비밀번호를 다시 입력하세요\"\n                  required\n                  type=\"password\"\n                  value={registerConfirmPassword}\n                />\n              </label>\n            </div>\n\n            <label className=\"flex flex-col gap-1\">\n              <span className=\"text-sm text-gray-600\">가입 유형</span>\n              <select\n                aria-label=\"가입 유형\"\n                className=\"rounded-md border border-gray-300 px-3 py-2 focus:border-black focus:outline-none\"\n                onChange={(event) =>\n                  setRegisterRole(event.target.value as UserRoleOption)\n                }\n                value={registerRole}\n              >\n                {Object.entries(roleLabels).map(([value, label]) => (\n                  <option key={value} value={value}>\n                    {label}\n                  </option>\n                ))}\n              </select>\n            </label>\n\n            <label className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <input\n                checked={registerTermsAgreed}\n                className=\"mt-1\"\n                onChange={(event) => setRegisterTermsAgreed(event.target.checked)}\n                type=\"checkbox\"\n              />\n              <span>이용약관(필수)을 확인하고 동의합니다.</span>\n            </label>\n\n            <label className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <input\n                checked={registerPrivacyAgreed}\n                className=\"mt-1\"\n                onChange={(event) =>\n                  setRegisterPrivacyAgreed(event.target.checked)\n                }\n                type=\"checkbox\"\n              />\n              <span>개인정보 처리방침(필수)에 동의합니다.</span>\n            </label>\n\n            <button\n              className=\"rounded-md bg-black px-4 py-2 text-white transition hover:bg-gray-800 disabled:opacity-50\"\n              disabled={registerLoading}\n              type=\"submit\"\n            >\n              {registerLoading ? \"가입 중...\" : \"회원가입\"}\n            </button>\n\n            {registerMessage && (\n              <p className=\"rounded-md bg-green-50 px-3 py-2 text-sm text-green-700\">\n                {registerMessage}\n              </p>\n            )}\n            {registerError && (\n              <p className=\"rounded-md bg-red-50 px-3 py-2 text-sm text-red-600\">\n                {registerError}\n              </p>\n            )}\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 558, "column": 0}, "map": {"version":3,"sources":["file:///Users/hwangjeongseong/java/Teamprj-Guardian-/frontapp/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;KAElC;IACL,IAAIF,QAAQC,GAAG,CAACK,yBAAyB,EAAE;;SAcpC;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;QAGT,OAAO;;IAOT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":["file:///Users/hwangjeongseong/java/Teamprj-Guardian-/frontapp/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"sources":["file:///Users/hwangjeongseong/java/Teamprj-Guardian-/frontapp/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}}]
}